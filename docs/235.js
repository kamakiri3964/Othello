"use strict";(self.webpackChunkothello=self.webpackChunkothello||[]).push([[235],{235:(e,n,t)=>{t.a(e,(async e=>{t.r(n),t.d(n,{__wbindgen_throw:()=>r.Or,init:()=>r.S1,next_move:()=>r.RV});var r=t(838),o=e([r]);r=(o.then?await o:o)[0]}))},838:(e,n,t)=>{t.a(e,(async r=>{t.d(n,{S1:()=>f,RV:()=>b,Or:()=>g});var o=t(530);e=t.hmd(e);var i=r([o]);o=(i.then?await i:i)[0];let u=new("undefined"==typeof TextDecoder?(0,e.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});u.decode();let a=null;function c(){return null!==a&&a.buffer===o.memory.buffer||(a=new Uint8Array(o.memory.buffer)),a}function d(e,n){return u.decode(c().subarray(e,e+n))}function f(){o.init()}let l=0,_=new("undefined"==typeof TextEncoder?(0,e.require)("util").TextEncoder:TextEncoder)("utf-8");const s="function"==typeof _.encodeInto?function(e,n){return _.encodeInto(e,n)}:function(e,n){const t=_.encode(e);return n.set(t),{read:e.length,written:t.length}};let h=null;function w(){return null!==h&&h.buffer===o.memory.buffer||(h=new Int32Array(o.memory.buffer)),h}function b(e){try{const u=o.__wbindgen_add_to_stack_pointer(-16);var n=function(e,n,t){if(void 0===t){const t=_.encode(e),r=n(t.length);return c().subarray(r,r+t.length).set(t),l=t.length,r}let r=e.length,o=n(r);const i=c();let u=0;for(;u<r;u++){const n=e.charCodeAt(u);if(n>127)break;i[o+u]=n}if(u!==r){0!==u&&(e=e.slice(u)),o=t(o,r,r=u+3*e.length);const n=c().subarray(o+u,o+r);u+=s(e,n).written}return l=u,o}(e,o.__wbindgen_malloc,o.__wbindgen_realloc),t=l;o.next_move(u,n,t);var r=w()[u/4+0],i=w()[u/4+1];return d(r,i)}finally{o.__wbindgen_add_to_stack_pointer(16),o.__wbindgen_free(r,i)}}function g(e,n){throw new Error(d(e,n))}}))},530:(e,n,t)=>{var r=([r])=>t.v(n,e.id,"aaa5c491380528e431da",{"./index_bg.js":{__wbindgen_throw:r.Or}});t.a(e,(e=>{var n=e([t(838)]);return n.then?n.then(r):r(n)}),1)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjM1LmpzIiwibWFwcGluZ3MiOiI4V0FJQSxJQUFJQSxFQUFvQixJQUZvQixvQkFBaEJDLGFBQThCLEVBQUlDLEVBQU9DLFNBQVMsUUFBUUYsWUFBY0EsYUFFM0QsUUFBUyxDQUFFRyxXQUFXLEVBQU1DLE9BQU8sSUFFNUVMLEVBQWtCTSxTQUVsQixJQUFJQyxFQUF1QixLQUMzQixTQUFTQyxJQUlMLE9BSDZCLE9BQXpCRCxHQUFpQ0EsRUFBcUJFLFNBQVcsa0JBQ2pFRixFQUF1QixJQUFJRyxXQUFXLGtCQUVuQ0gsRUFHWCxTQUFTSSxFQUFtQkMsRUFBS0MsR0FDN0IsT0FBT2IsRUFBa0JNLE9BQU9FLElBQWtCTSxTQUFTRixFQUFLQSxFQUFNQyxJQUluRSxTQUFTRSxJQUNaLFNBR0osSUFBSUMsRUFBa0IsRUFJbEJDLEVBQW9CLElBRm9CLG9CQUFoQkMsYUFBOEIsRUFBSWhCLEVBQU9DLFNBQVMsUUFBUWUsWUFBY0EsYUFFM0QsU0FFekMsTUFBTUMsRUFBd0QsbUJBQWpDRixFQUFrQkcsV0FDekMsU0FBVUMsRUFBS0MsR0FDakIsT0FBT0wsRUFBa0JHLFdBQVdDLEVBQUtDLElBRXZDLFNBQVVELEVBQUtDLEdBQ2pCLE1BQU1DLEVBQU1OLEVBQWtCTyxPQUFPSCxHQUVyQyxPQURBQyxFQUFLRyxJQUFJRixHQUNGLENBQ0hHLEtBQU1MLEVBQUlNLE9BQ1ZDLFFBQVNMLEVBQUlJLFNBMENyQixJQUFJRSxFQUF1QixLQUMzQixTQUFTQyxJQUlMLE9BSDZCLE9BQXpCRCxHQUFpQ0EsRUFBcUJwQixTQUFXLGtCQUNqRW9CLEVBQXVCLElBQUlFLFdBQVcsa0JBRW5DRixFQU1KLFNBQVNHLEVBQVVDLEdBQ3RCLElBQ0ksTUFBTUMsRUFBUyxtQ0FBc0MsSUFDckQsSUFBSUMsRUFwRFosU0FBMkJkLEVBQUtlLEVBQVFDLEdBRXBDLFFBQWdCQyxJQUFaRCxFQUF1QixDQUN2QixNQUFNZCxFQUFNTixFQUFrQk8sT0FBT0gsR0FDL0JULEVBQU13QixFQUFPYixFQUFJSSxRQUd2QixPQUZBbkIsSUFBa0JNLFNBQVNGLEVBQUtBLEVBQU1XLEVBQUlJLFFBQVFGLElBQUlGLEdBQ3REUCxFQUFrQk8sRUFBSUksT0FDZmYsRUFHWCxJQUFJQyxFQUFNUSxFQUFJTSxPQUNWZixFQUFNd0IsRUFBT3ZCLEdBRWpCLE1BQU0wQixFQUFNL0IsSUFFWixJQUFJZ0MsRUFBUyxFQUViLEtBQU9BLEVBQVMzQixFQUFLMkIsSUFBVSxDQUMzQixNQUFNQyxFQUFPcEIsRUFBSXFCLFdBQVdGLEdBQzVCLEdBQUlDLEVBQU8sSUFBTSxNQUNqQkYsRUFBSTNCLEVBQU00QixHQUFVQyxFQUd4QixHQUFJRCxJQUFXM0IsRUFBSyxDQUNELElBQVgyQixJQUNBbkIsRUFBTUEsRUFBSXNCLE1BQU1ILElBRXBCNUIsRUFBTXlCLEVBQVF6QixFQUFLQyxFQUFLQSxFQUFNMkIsRUFBc0IsRUFBYm5CLEVBQUlNLFFBQzNDLE1BQU1MLEVBQU9kLElBQWtCTSxTQUFTRixFQUFNNEIsRUFBUTVCLEVBQU1DLEdBRzVEMkIsR0FGWXJCLEVBQWFFLEVBQUtDLEdBRWhCTSxRQUlsQixPQURBWixFQUFrQndCLEVBQ1g1QixFQWlCUWdDLENBQWtCWCxFQUFHLG9CQUF3QixzQkFDcERZLEVBQU83QixFQUNYLFlBQWVrQixFQUFRQyxFQUFNVSxHQUM3QixJQUFJQyxFQUFLaEIsSUFBa0JJLEVBQVMsRUFBSSxHQUNwQ2EsRUFBS2pCLElBQWtCSSxFQUFTLEVBQUksR0FDeEMsT0FBT3ZCLEVBQW1CbUMsRUFBSUMsR0FDaEMsUUFDRSxrQ0FBcUMsSUFDckMsa0JBQXFCRCxFQUFJQyxJQUkxQixTQUFTQyxFQUFpQkMsRUFBTUMsR0FDbkMsTUFBTSxJQUFJQyxNQUFNeEMsRUFBbUJzQyxFQUFNQyxTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3RoZWxsby8uL3BrZy9pbmRleF9iZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB3YXNtIGZyb20gJy4vaW5kZXhfYmcud2FzbSc7XG5cbmNvbnN0IGxUZXh0RGVjb2RlciA9IHR5cGVvZiBUZXh0RGVjb2RlciA9PT0gJ3VuZGVmaW5lZCcgPyAoMCwgbW9kdWxlLnJlcXVpcmUpKCd1dGlsJykuVGV4dERlY29kZXIgOiBUZXh0RGVjb2RlcjtcblxubGV0IGNhY2hlZFRleHREZWNvZGVyID0gbmV3IGxUZXh0RGVjb2RlcigndXRmLTgnLCB7IGlnbm9yZUJPTTogdHJ1ZSwgZmF0YWw6IHRydWUgfSk7XG5cbmNhY2hlZFRleHREZWNvZGVyLmRlY29kZSgpO1xuXG5sZXQgY2FjaGVnZXRVaW50OE1lbW9yeTAgPSBudWxsO1xuZnVuY3Rpb24gZ2V0VWludDhNZW1vcnkwKCkge1xuICAgIGlmIChjYWNoZWdldFVpbnQ4TWVtb3J5MCA9PT0gbnVsbCB8fCBjYWNoZWdldFVpbnQ4TWVtb3J5MC5idWZmZXIgIT09IHdhc20ubWVtb3J5LmJ1ZmZlcikge1xuICAgICAgICBjYWNoZWdldFVpbnQ4TWVtb3J5MCA9IG5ldyBVaW50OEFycmF5KHdhc20ubWVtb3J5LmJ1ZmZlcik7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZWdldFVpbnQ4TWVtb3J5MDtcbn1cblxuZnVuY3Rpb24gZ2V0U3RyaW5nRnJvbVdhc20wKHB0ciwgbGVuKSB7XG4gICAgcmV0dXJuIGNhY2hlZFRleHREZWNvZGVyLmRlY29kZShnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIsIHB0ciArIGxlbikpO1xufVxuLyoqXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgd2FzbS5pbml0KCk7XG59XG5cbmxldCBXQVNNX1ZFQ1RPUl9MRU4gPSAwO1xuXG5jb25zdCBsVGV4dEVuY29kZXIgPSB0eXBlb2YgVGV4dEVuY29kZXIgPT09ICd1bmRlZmluZWQnID8gKDAsIG1vZHVsZS5yZXF1aXJlKSgndXRpbCcpLlRleHRFbmNvZGVyIDogVGV4dEVuY29kZXI7XG5cbmxldCBjYWNoZWRUZXh0RW5jb2RlciA9IG5ldyBsVGV4dEVuY29kZXIoJ3V0Zi04Jyk7XG5cbmNvbnN0IGVuY29kZVN0cmluZyA9ICh0eXBlb2YgY2FjaGVkVGV4dEVuY29kZXIuZW5jb2RlSW50byA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gZnVuY3Rpb24gKGFyZywgdmlldykge1xuICAgIHJldHVybiBjYWNoZWRUZXh0RW5jb2Rlci5lbmNvZGVJbnRvKGFyZywgdmlldyk7XG59XG4gICAgOiBmdW5jdGlvbiAoYXJnLCB2aWV3KSB7XG4gICAgY29uc3QgYnVmID0gY2FjaGVkVGV4dEVuY29kZXIuZW5jb2RlKGFyZyk7XG4gICAgdmlldy5zZXQoYnVmKTtcbiAgICByZXR1cm4ge1xuICAgICAgICByZWFkOiBhcmcubGVuZ3RoLFxuICAgICAgICB3cml0dGVuOiBidWYubGVuZ3RoXG4gICAgfTtcbn0pO1xuXG5mdW5jdGlvbiBwYXNzU3RyaW5nVG9XYXNtMChhcmcsIG1hbGxvYywgcmVhbGxvYykge1xuXG4gICAgaWYgKHJlYWxsb2MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBidWYgPSBjYWNoZWRUZXh0RW5jb2Rlci5lbmNvZGUoYXJnKTtcbiAgICAgICAgY29uc3QgcHRyID0gbWFsbG9jKGJ1Zi5sZW5ndGgpO1xuICAgICAgICBnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIsIHB0ciArIGJ1Zi5sZW5ndGgpLnNldChidWYpO1xuICAgICAgICBXQVNNX1ZFQ1RPUl9MRU4gPSBidWYubGVuZ3RoO1xuICAgICAgICByZXR1cm4gcHRyO1xuICAgIH1cblxuICAgIGxldCBsZW4gPSBhcmcubGVuZ3RoO1xuICAgIGxldCBwdHIgPSBtYWxsb2MobGVuKTtcblxuICAgIGNvbnN0IG1lbSA9IGdldFVpbnQ4TWVtb3J5MCgpO1xuXG4gICAgbGV0IG9mZnNldCA9IDA7XG5cbiAgICBmb3IgKDsgb2Zmc2V0IDwgbGVuOyBvZmZzZXQrKykge1xuICAgICAgICBjb25zdCBjb2RlID0gYXJnLmNoYXJDb2RlQXQob2Zmc2V0KTtcbiAgICAgICAgaWYgKGNvZGUgPiAweDdGKSBicmVhaztcbiAgICAgICAgbWVtW3B0ciArIG9mZnNldF0gPSBjb2RlO1xuICAgIH1cblxuICAgIGlmIChvZmZzZXQgIT09IGxlbikge1xuICAgICAgICBpZiAob2Zmc2V0ICE9PSAwKSB7XG4gICAgICAgICAgICBhcmcgPSBhcmcuc2xpY2Uob2Zmc2V0KTtcbiAgICAgICAgfVxuICAgICAgICBwdHIgPSByZWFsbG9jKHB0ciwgbGVuLCBsZW4gPSBvZmZzZXQgKyBhcmcubGVuZ3RoICogMyk7XG4gICAgICAgIGNvbnN0IHZpZXcgPSBnZXRVaW50OE1lbW9yeTAoKS5zdWJhcnJheShwdHIgKyBvZmZzZXQsIHB0ciArIGxlbik7XG4gICAgICAgIGNvbnN0IHJldCA9IGVuY29kZVN0cmluZyhhcmcsIHZpZXcpO1xuXG4gICAgICAgIG9mZnNldCArPSByZXQud3JpdHRlbjtcbiAgICB9XG5cbiAgICBXQVNNX1ZFQ1RPUl9MRU4gPSBvZmZzZXQ7XG4gICAgcmV0dXJuIHB0cjtcbn1cblxubGV0IGNhY2hlZ2V0SW50MzJNZW1vcnkwID0gbnVsbDtcbmZ1bmN0aW9uIGdldEludDMyTWVtb3J5MCgpIHtcbiAgICBpZiAoY2FjaGVnZXRJbnQzMk1lbW9yeTAgPT09IG51bGwgfHwgY2FjaGVnZXRJbnQzMk1lbW9yeTAuYnVmZmVyICE9PSB3YXNtLm1lbW9yeS5idWZmZXIpIHtcbiAgICAgICAgY2FjaGVnZXRJbnQzMk1lbW9yeTAgPSBuZXcgSW50MzJBcnJheSh3YXNtLm1lbW9yeS5idWZmZXIpO1xuICAgIH1cbiAgICByZXR1cm4gY2FjaGVnZXRJbnQzMk1lbW9yeTA7XG59XG4vKipcbiogQHBhcmFtIHtzdHJpbmd9IHNcbiogQHJldHVybnMge3N0cmluZ31cbiovXG5leHBvcnQgZnVuY3Rpb24gbmV4dF9tb3ZlKHMpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXRwdHIgPSB3YXNtLl9fd2JpbmRnZW5fYWRkX3RvX3N0YWNrX3BvaW50ZXIoLTE2KTtcbiAgICAgICAgdmFyIHB0cjAgPSBwYXNzU3RyaW5nVG9XYXNtMChzLCB3YXNtLl9fd2JpbmRnZW5fbWFsbG9jLCB3YXNtLl9fd2JpbmRnZW5fcmVhbGxvYyk7XG4gICAgICAgIHZhciBsZW4wID0gV0FTTV9WRUNUT1JfTEVOO1xuICAgICAgICB3YXNtLm5leHRfbW92ZShyZXRwdHIsIHB0cjAsIGxlbjApO1xuICAgICAgICB2YXIgcjAgPSBnZXRJbnQzMk1lbW9yeTAoKVtyZXRwdHIgLyA0ICsgMF07XG4gICAgICAgIHZhciByMSA9IGdldEludDMyTWVtb3J5MCgpW3JldHB0ciAvIDQgKyAxXTtcbiAgICAgICAgcmV0dXJuIGdldFN0cmluZ0Zyb21XYXNtMChyMCwgcjEpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHdhc20uX193YmluZGdlbl9hZGRfdG9fc3RhY2tfcG9pbnRlcigxNik7XG4gICAgICAgIHdhc20uX193YmluZGdlbl9mcmVlKHIwLCByMSk7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gX193YmluZGdlbl90aHJvdyhhcmcwLCBhcmcxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGdldFN0cmluZ0Zyb21XYXNtMChhcmcwLCBhcmcxKSk7XG59O1xuXG4iXSwibmFtZXMiOlsiY2FjaGVkVGV4dERlY29kZXIiLCJUZXh0RGVjb2RlciIsIm1vZHVsZSIsInJlcXVpcmUiLCJpZ25vcmVCT00iLCJmYXRhbCIsImRlY29kZSIsImNhY2hlZ2V0VWludDhNZW1vcnkwIiwiZ2V0VWludDhNZW1vcnkwIiwiYnVmZmVyIiwiVWludDhBcnJheSIsImdldFN0cmluZ0Zyb21XYXNtMCIsInB0ciIsImxlbiIsInN1YmFycmF5IiwiaW5pdCIsIldBU01fVkVDVE9SX0xFTiIsImNhY2hlZFRleHRFbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJlbmNvZGVTdHJpbmciLCJlbmNvZGVJbnRvIiwiYXJnIiwidmlldyIsImJ1ZiIsImVuY29kZSIsInNldCIsInJlYWQiLCJsZW5ndGgiLCJ3cml0dGVuIiwiY2FjaGVnZXRJbnQzMk1lbW9yeTAiLCJnZXRJbnQzMk1lbW9yeTAiLCJJbnQzMkFycmF5IiwibmV4dF9tb3ZlIiwicyIsInJldHB0ciIsInB0cjAiLCJtYWxsb2MiLCJyZWFsbG9jIiwidW5kZWZpbmVkIiwibWVtIiwib2Zmc2V0IiwiY29kZSIsImNoYXJDb2RlQXQiLCJzbGljZSIsInBhc3NTdHJpbmdUb1dhc20wIiwibGVuMCIsInIwIiwicjEiLCJfX3diaW5kZ2VuX3Rocm93IiwiYXJnMCIsImFyZzEiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=